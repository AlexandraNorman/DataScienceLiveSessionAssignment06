install.packages("plyr")
install.packages("gdata")
source('/mnt/hgfs/SMU/Intro_DataScience/06/uni6_bootstrap.R')
source('/mnt/hgfs/SMU/Intro_DataScience/06/uni6_bootstrap.R', echo=TRUE)
# Author: Gino
# Live Assignment 06
# Load necessary librarys, to help with further analysis of data
# install plyr and gdata and loaded into R
library(plyr)
library(gdata)
library(plyr)
install.packages("plyr")
install.packages("Rcpp")
install.packages("Date.o")
library(plyr)
install.packages("plyr")
install.packages("plyr")
install.packages(c("brew", "countrycode",
"devtools", "dplyr",
"ggplot2", "googleVis",
"knitr", "MCMCpack",
"repmis", "RCurl",
"rmarkdown", "texreg",
"tidyr", "WDI",
"xtable", "Zelig"))
install.packages("plyr")
install.packages("gdata")
install.packages("plyr")
install.packages("Rcpp")
install.packages("g++")
# Author: Gino
source('~/Github/DataScienceLiveSessionAssignment06/Analysis/Data/Cleanup_01.R', echo=TRUE)
source('~/Github/DataScienceLiveSessionAssignment06/Analysis/Data/Cleanup_01.R', echo=TRUE)
source('~/Github/DataScienceLiveSessionAssignment06/Analysis/Data/Cleanup_02.R', echo=TRUE)
source('~/Github/DataScienceLiveSessionAssignment06/Analysis/Data/Cleanup_03.R', echo=TRUE)
View(mn.sale)
mn.condos <- mn.sale[which(grepl("CONDOS",mn.sale$building.class.category)),]
dim(mn.condos)
View(mn.condos)
plot(log10(mn.condos$gross.sqft), log10(mn.condos$sale.price.n))
hist(log10(mn.condos$sale.price.n))
summary(mn.condos[which(mn.condos$sale.price.n<100000),])
mn.condos$outliers <- (log10(mn.condos$sale.price.n) <= 5) + 0
mn.condos$outliers <- (log10(mn.condos$sale.price.n) <= 5) + 0
mn.condos <- mn.condos[which(mn.condos$outliers == 0),]
View(mn.condos)
plot(mn.condos$gross.sqft, mn.condos$sale.price.n)
#writing out intermediate cleanedup file with family home
write.csv(mn.condos,file="rollingsales_manhattan_condos.csv")
#plotting the data set, to see if its normally distributed
hist(log10(mn.homes$sale.price.n))
#plotting the data set, to see if its normally distributed
hist(log10(mn.homes$gross.sqft))
qqplot(log10(mn.homes$sale.price.n))
qqplot(log10(mn.homes$sale.price.n))
qqplot(mn.homes$gross.sqft, mn.homes$sale.price.n)
#plotting the data set, to see if its normally distributed
hist(log10(mn.homes$land.sqft))
#qqplot gross.sqft vs. salesprice
qqplot(mn.homes$land.sqft, mn.homes$sale.price.n)
# the plot amlost looks linear
#qqplot gross.sqft vs. salesprice
qqplot(mn.homes$gross.sqft, mn.homes$sale.price.n)
# the plot amlost looks linear
boxplot(mn.homes$gross.sqft,mn.homes$sale.price.n)
boxplot(mn.homes$gross.sqft,mn.homes$land.sqft)
boxplot(mn.homes$sale.price.n*mn.homes$gross.sqft, data=mn.homes)
boxplot(mn.homes$sale.price.n*mn.homes$gross.sqft, mn.homes$sale.price.n*mn.homes$land.sqft, data=mn.homes)
#
boxplot(mn.homes$sale.price.n*log(mn.homes$gross.sqft), mn.homes$sale.price.n*log(mn.homes$land.sqft), data=mn.homes)
boxplot(mn.homes$sale.price.n*log10(mn.homes$gross.sqft), mn.homes$sale.price.n*log10(mn.homes$land.sqft), data=mn.homes)
boxplot(log10(mn.homes$sale.price.n*mn.homes$gross.sqft), log20(mn.homes$sale.price.n*mn.homes$land.sqft), data=mn.homes)
boxplot(log10(mn.homes$sale.price.n*mn.homes$gross.sqft), log10(mn.homes$sale.price.n*mn.homes$land.sqft), data=mn.homes)
#plotting the data set to analyse the data and make a educated decision on
boxplot(log10(mn.homes$gross.sqft), log10(mn.homes$land.sqft), data=mn.homes)
#plotting the data set to analyse the data and make a educated decision on
#cost
boxplot(mn.homes$sale.price.n, mn.homes$gross.sqft, data=mn.homes)
boxplot(mn.homes$gross.sqft,mn.homes$sale.price.n,  data=mn.homes)
boxplot(mn.homes$sale.price.n*mn.homes$gross.sqft,  data=mn.homes)
boxplot(mn.homes$sale.price.n*mn.homes$gross.sqft,mn.homes$sale.price.n*mn.homes$land.sqft,  data=mn.homes)
#plotting the data set to analyse the data and make a educated decision on
#c
boxplot(log10(mn.homes$sale.price.n)*log10(mn.homes$gross.sqft),log10(mn.homes$sale.price.n)*log10(mn.homes$land.sqft),  data=mn.homes)
#
plot(mn.homes$land.sqft, mn.homes$sale.price.n)
plot(mn.homes$land.sqft, mn.homes$sale.price.n, type=l)
plot(mn.homes$land.sqft, mn.homes$sale.price.n, type="l")
plot(log10(mn.homes$land.sqft), log10(mn.homes$sale.price.n,) type="l")
plot(log10(mn.homes$land.sqft), log10(mn.homes$sale.price.n), type="l")
#cost per land square feet to price in borough manhattan
plot(log10(mn.homes$land.sqft), log10(mn.homes$sale.price.n), type="p")
#plotting the data set to analyse the data and make a educated decision on
#cost per land square feet to price in borough manhattan
plot(log10(mn.homes$land.sqft), mn.homes$sale.price.n, type="p")
#cost per land square feet to price in borough manhattan
plot(log10(mn.homes$land.sqft), mn.homes$sale.price.n/1000, type="p")
#plotting the data set to analyse the data and make a educated decision on
#cost per land square feet to price in borough manhattan
plot(log10(mn.homes$land.sqft), mn.homes$sale.price.n/100000, type="p")
#plotting the data set to analyse the data and make a educated decision on
#cost per land square feet to price in borough manhattan
plot(mn.homes$land.sqft, mn.homes$sale.price.n/100000, type="p")
summary(mn.homes$sale.price.n)
#Returns mode of a data set
source('~/Github/DataScienceLiveSessionAssignment06/Analysis/getmode.R', echo=TRUE)
getmode(mn.homes$sale.price.n)
result <- getmode(mn.homes$sale.price.n)
print(result)
#plotting the data set to analyse the data and make a educated decision on
#cost per gross square feet to price in borough manhattan
plot(mn.homes$gross.sqft, mn.homes$sale.price.n/100000, type="p")
getmode(mn.homes$sale.price.n)
getmode(mn.homes$sale.price.n)
